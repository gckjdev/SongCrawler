
1.歌曲抓取方式

  1.1 总的歌曲库
     1）通过百度音乐，从A到Z方式，抓取以该字母为名字首字母的所有歌手URL,保存到以该字母命名的目录下的singe_index文件
     2）遍历所有字母目录下的singer_index文件，抓取所有歌手的歌曲的URL,保存到以歌手名字命名的目录下的song_index文件
     3）遍历所有song_index文件，抓取所有歌曲的歌词， 保存到以歌曲名命名的文件下
     4）在以上3步完成之后，写入数据库，生成song表， song_index表，singer表
  
  1.2 分类信息
     1）通过百度音乐，抓取分类信息，写到song_category表中，同时更新song表的category字段，写入分类信息 

  1.3 定期更新
     1）抓取热榜，定时更新song表和song_category表


2.数据库结构

        表名: song
        作用: 歌曲元信息表
        表项: name: 歌曲名
              singer: 歌手名
              album: 专辑(可选)
              url: 歌曲链接
              baidu_id: 百度编制的歌曲ID(url后面的数字,如http://music.baidu.com/artist/14791073中的14791073)
              lyric: 歌词存放路径（本地路径）

	      major_category 字符串数组，大分类，如 [流行,80后]，对应song_category中的name
	      minor_category 字符串数组，小分类，如 [爵士乐,忧伤]，对应song_category中的sub_name

              hit: 歌曲热度(可选, 用于以后推荐等功能)
              singer_info: 暂时无用

        表名: song_category
        作用: 记录所有的分类及其子分类
        表项: category: 大分类名字，如"流行"
　　　　　　　 sub_category: 子分类名字
              songs_data: 该分类下的歌曲数组，数组项为：
                  {歌曲名： 歌曲在song表中ObjectId}


        表名: singer 
        作用: 这个表按歌手名字存放信息, 可以由此表快速定位其所有歌曲(dir表项)
              也可获得该歌手的所有歌名清单(通过index_id字段)
        表项: name_capital : 名字首字母
              singer: 歌手名字
              dir: 该歌手歌曲存放目录
             index_id: 保存歌手歌曲索引表的id
     
     
        表名: singer_song_index
        作用: 这个表汇集歌手的所有歌曲清单. 同时, 它可以反查歌手信息(singer_id字段)
        表项: singer: 歌手名字
              singer_id: 对应的singer表的id
              songs:  歌曲名数组,　数组项:
　　　　　　　　       { 歌曲名:　song表中的id }  



　　　　表名: song_hotboard
　　　　作用: 存放各类型榜单歌曲前100名信息,用于定期(如每天)的爬虫更新
　　　　表项: name : 榜单名字字符串
　　　　　　　type : 榜单类型  
　　　　　　　hits : 热榜数组,数组项
　　　　　　　　　  { 歌曲名:　song表中的id }　(对最新/最热类型而言)
　　　　　　　　　  { 歌手名:　singer表中的id }　(对歌手榜而言)

